name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      ALLOWED_HOSTS: "localhost"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Linter (Flake8)
        run: |
          pip install flake8
          flake8

      - name: Run Tests
        run: |
          python manage.py test

      - name: Verify test coverage
        run: |
          pip install coverage
          coverage run --source='.' manage.py test
          coverage report --fail-under=80

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Tag Docker Image
        run: |
          COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
          DOCKER_IMAGE_NAME=mytricks/orange-county-lettings
          docker build -t $DOCKER_IMAGE_NAME:$COMMIT_HASH .
          docker push $DOCKER_IMAGE_NAME:$COMMIT_HASH

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Render
        run: |
          COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
          DOCKER_IMAGE_NAME=docker.io/mytricks/orange-county-lettings
          IMAGE_URL="$DOCKER_IMAGE_NAME:$COMMIT_HASH"
          curl -X POST https://api.render.com/v1/services/srv-cqt1d0dsvqrc73fohg9g/deploys \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d "{\"clearCache\": \"clear\", \"imageUrl\": \"$IMAGE_URL\"}"
